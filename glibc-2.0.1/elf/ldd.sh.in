#! /bin/sh

# Copyright (C) 1996, 1997 Free Software Foundation, Inc.
# This file is part of the GNU C Library.

# The GNU C Library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.

# The GNU C Library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.

# You should have received a copy of the GNU Library General Public
# License along with the GNU C Library; see the file COPYING.LIB.  If not,
# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.


# This is the `ldd' command, which lists what shared libraries are
# used by given dynamically-linked executables.  It works by invoking the
# run-time dynamic linker as a command and setting the environment
# variable LD_TRACE_LOADED_OBJECTS to a non-empty value.

RTLD=@RTLD@
RELOCS=

while test $# -gt 0; do
  case "$1" in
  --v | --ve | --ver | --vers | --versi | --versio | --version)
    echo 'ldd (GNU libc) @VERSION@
Copyright (C) 1996, 1997 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.'
    exit 0 ;;
  --h | --he | --hel | --help)
    echo "ldd [OPTION]... FILE...
      --help              print this help and exit
      --version           print version information and exit
  -d, --data-relocs       process data relocations
  -r, --function-relocs   process data and function relocations
Report bugs using the \`glibcbug' script to <bugs@gnu.ai.mit.edu>."
    exit 0 ;;
  -d | --d | --da | --dat | --data | --data- | --data-r | --data-re | \
  --data-rel | --data-relo | --data-reloc | --data-relocs)
    RELOCS='--data-relocs'
    shift ;;
  -r | --f | --fu | --fun | --func | --funct | --functi | --functio | \
  --function | --function- | --function-r | --function-re | --function-rel | \
  --function-relo | --function-reloc | --function-relocs)
    RELOCS='--function-relocs'
    shift ;;
  --)		# Stop option processing.
    shift; break ;;
  -*)
    echo >&2 "\
ldd: unrecognized option \`$1'
Try \`ldd --help' for more information."
    exit 1 ;;
  *)
    break ;;
  esac
done

case $# in
0)
  echo >&2 "\
ldd: missing file arguments
Try \`ldd --help' for more information."
  exit 1 ;;
1)
  # We don't list the file name when there is only one.
  case "$1" in
  /*) file="$1" ;;
  *) file="./$1" ;;
  esac
  if test ! -f "$file"; then
    echo "${file}: no such file"
    exit 1
  else
    test -x "$file" ||
      echo "warning: you do not have execution permission for \`$file'"
    if ${RTLD} --verify "$file"; then
      LD_TRACE_LOADED_OBJECTS=1 exec ${RTLD} ${RELOCS} "$file" || exit 1
    else
      echo '	not a dynamic executable'
      exit 1
    fi
  fi
  exit ;;
*)
  set -e	# Bail out immediately if ${RTLD} loses on any argument.
  result=0
  for file; do
    echo "${file}:"
    case "$file" in
    /*) : ;;
    *) file="./$file" ;;
    esac
    if test ! -f "$file"; then
      echo "${file}: no such file"
      result=1
    else
      test -x "$file" ||
	echo "warning: you do not have execution permission for \`$file'"
      if ${RTLD} --verify "$file"; then
	LD_TRACE_LOADED_OBJECTS=1 ${RTLD} ${RELOCS} "$file" || result=1
      else
	echo '	not a dynamic executable'
	result=1
      fi
    fi
  done
esac

exit $result
